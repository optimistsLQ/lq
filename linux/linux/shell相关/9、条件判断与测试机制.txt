条件判断

判断条件是否成立，需要由测试机制来完成

如： 1 = 2    /etc/hello 是否是文件夹


测试命令 = 判断指令 + 结果指令


判断指令可使用如下三种形式

1、 test expression   - test指令，所有的用法可以使用 help test

    例： a=1;b=2    test $a = $b  $?  

2、 [ expression ]  - 中括号

    例： [ $a = $b ]; echo $?        

    注意：括号内首尾必须有空格 
    建议：括号内变量都用双引号包裹, 否则 $a 不存在， b=1的情况下比较，会报错

3、[[ expression ]]  - 双中括号


获取结果指令

$?   - 获取上一条命令执行的结果，结果会返回 0 - 成功  非0的数字 - 各种失败情况

在如下情况下才会返回0成功：  表达式结果返回true & 程序未报错 & 找到资源等
其他任何有问题的情况，会返回非0的数字



test常用的比较参数：

a=1;b=2;[ "$a" 比较符 "$b" ];echo $?

-eq 或 ==   - 等于    a=1;b=2;[ "$a" -eq "$b" ];echo $?     - 1
-ne 或 !=   - 不等于   a=1;b=2;[ "$a" -ne "$b" ];echo $?     - 0
-lt   - 小于
-le   - 小于等于
-gt   - 大于
-ge   - 大于等于



非空判断：

-z $var    - 字符串是否存在或为空
-n $var    - 字符串是否存在且不为空



判断文件名或其他文件或内容是否匹配（正则）：

filename=hello.sh

[[ $filename =~ .+\.sh$ ]] && echo sh || echo not sh


注意：这里最好用双中括号


判断文件或文件夹

1、 -a filename   - 文件是否存在
2、 -d filename   - 文件是否是一个文件夹
3、 -x filename   - 你是否可执行该文件
4、 -w filename   - ...可写

使用： [ -d /etc/ ]; echo $?      - 0

还有其他命令，可以使用 help test查看








