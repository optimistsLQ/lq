shell中的变量

A.shell脚本本身是弱类型的语言
B.语言在运行时会做隐式转换
C.默认均为字符类型，无需指定类型
D.参与运算会自动进行类型转换
D.变量无需事先定义可直接调用


变量举例：

1、 name="hello"     - 值用单引号或双引号括起来

2、 name=hello     -  值也可以直接写，不需要引号

3、 name=`hostname`   - 值如果是 指令，需要``包裹

4、 echo $name   - 输出变量的时候，必须是 $ 开头，不然当做字符串处理，不当做变量

5、 echo 110+220  - 输出110+220,直接会转换成字符串

6、 name=`cat /home/luowen/hello.txt`   - name的值是hello.txt中的内容，只有一行纯字符串，没有格式

7、 echo "$txt"   - 按hello.txt原有的格式，展示文件内容


变量命名规则：

1、 不能使用程序中的关键字和保留字，指令， 如if, for
   判断: type if   - if is a shell keyword        
        type hostname  - hostname is /bin/hostname
 
2、 只能使用数字、字母及下划线、且不能以数字开头
   n1 - ok    1n - error,当做指令在处理 

3、 语义化

4、 统一的命名规则：驼峰命名法


变量的种类
根据变量的生效范围等标准划分为下面变量类型：

1、局部变量 - 当前进程有效，父进程和子进程都无法使用
   如 name=hello    echo $name

   注意：
   1、可通过pstree -p 查看所有的进程
   2、可通过bash开启一个进程
   3、可通过exit关闭一个进程
	
2、全局变量（环境变量）

   全局变量和环境变量可分为：
   1、全部进程都可使用的变量，如$USER $PWD等
   2、只在本进程和下级进程有效

   环境变量：
   A. env  - 查看所有的环境变量
      export
      declare -x

   B. 创建一个环境或全局变量
      export name   - 这个name是变量，如 $name=zhangsan
      Declare -x name  - 与export一致

      注意：
      1、声明的全局变量，只能在本进程和下级进程使用
      2、下级进程可以修改这个变量
      3、下级进程修改了这个变量，只会在下级进程中生效，不会影响到本进程

   C. 销毁一个变量
      unset name  - 这个name是变量，如 $name=zhangsan，可以是全局变量和局部变量

   D. 查看所有的变量 和 函数，包括全局和局部
      set


 